{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { API } from 'src/app/core/services/ip.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/core/services/generic.service\";\nexport class UpdateLeadComponent {\n  constructor(dialogRef, data, genericService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.genericService = genericService;\n    this.item = {\n      lead_id: '',\n      duplicate_of: '',\n      source: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      cell_phone: '',\n      home_phone: ''\n    };\n  }\n  ngOnInit() {}\n  getLead(leadId) {\n    this.genericService.getMethod(API(leadId).getLeadById).subscribe(res => {\n      this.item = res;\n    });\n  }\n  submit() {}\n  static #_ = this.ɵfac = function UpdateLeadComponent_Factory(t) {\n    return new (t || UpdateLeadComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.GenericService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateLeadComponent,\n    selectors: [[\"app-update-lead\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"mat-typography\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function UpdateLeadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Install Angular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"mat-dialog-content\", 1);\n        i0.ɵɵelementStart(3, \"mat-dialog-actions\", 2)(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function UpdateLeadComponent_Template_button_click_6_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(7, \"Install\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAuBA,eAAe,QAAQ,0BAA0B;AAGxE,SAASC,GAAG,QAAQ,kCAAkC;;;;AAQtD,OAAM,MAAOC,mBAAmB;EAW9BC,YAAmBC,SAA4C,EAC7BC,IAAgB,EACxCC,cAA8B;IAFrB,cAAS,GAATF,SAAS;IACM,SAAI,GAAJC,IAAI;IAC5B,mBAAc,GAAdC,cAAc;IAZzB,SAAI,GAAS;MACZC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;KACZ;EAG4C;EAC5CC,QAAQ,IACR;EAEAC,OAAO,CAACC,MAAc;IACpB,IAAI,CAACX,cAAc,CAACY,SAAS,CAACjB,GAAG,CAACgB,MAAM,CAAC,CAACE,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MACrE,IAAI,CAACC,IAAI,GAAGD,GAAG;IACjB,CAAC,CAAC;EAEJ;EAEAE,MAAM,IAEN;EAAC;qBA1BUrB,mBAAmB,8DAYpBF,eAAe;EAAA;EAAA;UAZdE,mBAAmB;IAAAsB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZhCC,6BAAqB;QAAAA,+BAAe;QAAAA,iBAAK;QACzCA,wCAEqB;QACrBA,6CAAgC;QACMA,sBAAM;QAAAA,iBAAS;QACnDA,iCAAsC;QAAnBA;UAAA,OAASC,YAAQ;QAAA,EAAC;QAACD,uBAAO;QAAAA,iBAAS","names":["MAT_DIALOG_DATA","API","UpdateLeadComponent","constructor","dialogRef","data","genericService","lead_id","duplicate_of","source","first_name","last_name","email","cell_phone","home_phone","ngOnInit","getLead","leadId","getMethod","getLeadById","subscribe","res","item","submit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/mohamedelsayed/Personal/angular/angular-interview-task/src/app/view/Pages/list-lead/update-lead/update-lead.component.ts","/home/mohamedelsayed/Personal/angular/angular-interview-task/src/app/view/Pages/list-lead/update-lead/update-lead.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../list-lead.component';\nimport { GenericService } from 'src/app/core/services/generic.service';\nimport { API } from 'src/app/core/services/ip.service';\nimport { Lead } from 'src/app/core/Interfaces/lead';\n\n@Component({\n  selector: 'app-update-lead',\n  templateUrl: './update-lead.component.html',\n  styleUrls: ['./update-lead.component.scss']\n})\nexport class UpdateLeadComponent {\n item: Lead = {\n  lead_id: '',\n  duplicate_of: '',\n  source: '',\n  first_name: '',\n  last_name: '',\n  email: '',\n  cell_phone: '',\n  home_phone: ''\n };\n  constructor(public dialogRef: MatDialogRef<UpdateLeadComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private genericService: GenericService) { }\n  ngOnInit() {\n  }\n\n  getLead(leadId: string) {\n    this.genericService.getMethod(API(leadId).getLeadById).subscribe(res => { \n      this.item = res;\n    });\n\n  }\n\n  submit() {\n\n  }\n}\n","<h2 mat-dialog-title>Install Angular</h2>\n<mat-dialog-content class=\"mat-typography\">\n    \n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button (click)=\"submit()\">Install</button>\n</mat-dialog-actions>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}