{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { API } from 'src/app/core/services/ip.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/core/services/generic.service\";\nexport class UpdateLeadComponent {\n  constructor(dialogRef, data, genericService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.genericService = genericService;\n  }\n  ngOnInit() {}\n  getLead(leadId) {\n    this.genericService.getMethod(API(leadId).getLeadById).subscribe(res => {\n      this.item = res;\n    });\n  }\n  submit() {}\n  static #_ = this.ɵfac = function UpdateLeadComponent_Factory(t) {\n    return new (t || UpdateLeadComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.GenericService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateLeadComponent,\n    selectors: [[\"app-update-lead\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"mat-typography\"], [1, \"container\"], [1, \"grid-cols-2\", \"gap-2\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function UpdateLeadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Install Angular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\")(6, \"label\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(8, \"mat-dialog-actions\", 4)(9, \"button\", 5);\n        i0.ɵɵtext(10, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function UpdateLeadComponent_Template_button_click_11_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(12, \"Install\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" Name : \", ctx.item.first_name + \" \" + ctx.item.last_name, \" \");\n      }\n    },\n    dependencies: [i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAuBA,eAAe,QAAQ,0BAA0B;AAGxE,SAASC,GAAG,QAAQ,kCAAkC;;;;AAQtD,OAAM,MAAOC,mBAAmB;EAE9BC,YAAmBC,SAA4C,EAC7BC,IAAgB,EACxCC,cAA8B;IAFrB,cAAS,GAATF,SAAS;IACM,SAAI,GAAJC,IAAI;IAC5B,mBAAc,GAAdC,cAAc;EAAoB;EAC5CC,QAAQ,IACR;EAEAC,OAAO,CAACC,MAAc;IACpB,IAAI,CAACH,cAAc,CAACI,SAAS,CAACT,GAAG,CAACQ,MAAM,CAAC,CAACE,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MACrE,IAAI,CAACC,IAAI,GAAGD,GAAG;IACjB,CAAC,CAAC;EAEJ;EAEAE,MAAM,IAEN;EAAC;qBAjBUb,mBAAmB,8DAGpBF,eAAe;EAAA;EAAA;UAHdE,mBAAmB;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZhCC,6BAAqB;QAAAA,+BAAe;QAAAA,iBAAK;QACzCA,6CAA2C;QAKvBA,YACJ;QAAAA,iBAAQ;QAKxBA,6CAAgC;QACMA,uBAAM;QAAAA,iBAAS;QACnDA,kCAAsC;QAAnBA;UAAA,OAASC,YAAQ;QAAA,EAAC;QAACD,wBAAO;QAAAA,iBAAS;;;QARpCA,eACJ;QADIA,sFACJ","names":["MAT_DIALOG_DATA","API","UpdateLeadComponent","constructor","dialogRef","data","genericService","ngOnInit","getLead","leadId","getMethod","getLeadById","subscribe","res","item","submit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/mohamedelsayed/Personal/angular/angular-interview-task/src/app/view/Pages/list-lead/update-lead/update-lead.component.ts","/home/mohamedelsayed/Personal/angular/angular-interview-task/src/app/view/Pages/list-lead/update-lead/update-lead.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../list-lead.component';\nimport { GenericService } from 'src/app/core/services/generic.service';\nimport { API } from 'src/app/core/services/ip.service';\nimport { Lead } from 'src/app/core/Interfaces/lead';\n\n@Component({\n  selector: 'app-update-lead',\n  templateUrl: './update-lead.component.html',\n  styleUrls: ['./update-lead.component.scss']\n})\nexport class UpdateLeadComponent {\n item: any\n  constructor(public dialogRef: MatDialogRef<UpdateLeadComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private genericService: GenericService) { }\n  ngOnInit() {\n  }\n\n  getLead(leadId: string) {\n    this.genericService.getMethod(API(leadId).getLeadById).subscribe(res => { \n      this.item = res;\n    });\n\n  }\n\n  submit() {\n\n  }\n}\n","<h2 mat-dialog-title>Install Angular</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <div class=\"container\">\n        <div class=\"grid-cols-2 gap-2\">\n            <div>\n                <label>\n                    Name : {{item.first_name +' '+ item.last_name}}\n                </label>\n            </div>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button (click)=\"submit()\">Install</button>\n</mat-dialog-actions>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}