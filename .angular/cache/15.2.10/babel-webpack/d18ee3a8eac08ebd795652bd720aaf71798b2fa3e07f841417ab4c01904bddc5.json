{"ast":null,"code":"import { API } from '../../../core/services/ip.service';\nimport { UpdateLeadComponent } from './update-lead/update-lead.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/generic.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-pagination\";\nfunction ListLeadComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 8)(1, \"th\", 9);\n    i0.ɵɵtext(2, \"Lead Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 9);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 9);\n    i0.ɵɵtext(6, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 10);\n    i0.ɵɵtext(8, \"Actions\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListLeadComponent_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 11)(1, \"td\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 13);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 14);\n    i0.ɵɵlistener(\"click\", function ListLeadComponent_tr_7_Template_td_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateLead(item_r4));\n    });\n    i0.ɵɵtext(8, \" Check \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r4.lead_id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r4.first_name, \" \", item_r4.last_name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r4.email ? item_r4.email : \"Not Provided\", \" \");\n  }\n}\nfunction ListLeadComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"pagination-controls\", 16);\n    i0.ɵɵlistener(\"pageChange\", function ListLeadComponent_div_9_Template_pagination_controls_pageChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.page = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    itemsPerPage: 10,\n    currentPage: a1\n  };\n};\nexport class ListLeadComponent {\n  constructor(genericService, dialog) {\n    this.genericService = genericService;\n    this.dialog = dialog;\n    this.show = 5; // Use this value to control how many items will be appear per Selecton Criteria and Operations\n    this.items = [];\n    this.page = 1;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.genericService.getMethod(API().getListOfLeads).subscribe(data => {\n      console.log(data); // JSON data will be logged here\n      this.items = data;\n    });\n  }\n  updateLead(leadId) {\n    const dialogRef = this.dialog.open(UpdateLeadComponent, {\n      data: {\n        id: leadId\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ListLeadComponent_Factory(t) {\n    return new (t || ListLeadComponent)(i0.ɵɵdirectiveInject(i1.GenericService), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListLeadComponent,\n    selectors: [[\"app-list-lead\"]],\n    decls: 10,\n    vars: 13,\n    consts: [[1, \"flex\", \"items-center\", \"justify-center\"], [1, \"container\"], [1, \"w-full\", \"flex\", \"flex-row\", \"flex-no-wrap\", \"sm:bg-white\", \"rounded-lg\", \"overflow-hidden\", \"sm:shadow-lg\", \"my-5\"], [1, \"text-white\"], [\"class\", \"bg-gray-400 flex flex-col flex-no wrap sm:table-row rounded-l-lg sm:rounded-none mb-2 sm:mb-0\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex-1\", \"sm:flex-none\"], [\"class\", \"flex flex-col flex-no wrap sm:table-row mb-2 sm:mb-0\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"flex justify-center pt-2\", 4, \"ngIf\"], [1, \"bg-gray-400\", \"flex\", \"flex-col\", \"flex-no\", \"wrap\", \"sm:table-row\", \"rounded-l-lg\", \"sm:rounded-none\", \"mb-2\", \"sm:mb-0\"], [1, \"p-3\", \"text-left\"], [\"width\", \"110px\", 1, \"p-3\", \"text-left\"], [1, \"flex\", \"flex-col\", \"flex-no\", \"wrap\", \"sm:table-row\", \"mb-2\", \"sm:mb-0\"], [1, \"border-grey-light\", \"border\", \"hover:bg-gray-100\", \"p-3\"], [1, \"border-grey-light\", \"border\", \"hover:bg-gray-100\", \"p-3\", \"truncate\"], [1, \"border-grey-light\", \"border\", \"hover:bg-gray-100\", \"p-3\", \"text-blue-400\", \"hover:text-blue-600\", \"hover:font-medium\", \"cursor-pointer\", 3, \"click\"], [1, \"flex\", \"justify-center\", \"pt-2\"], [3, \"pageChange\"]],\n    template: function ListLeadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\", 2)(3, \"thead\", 3);\n        i0.ɵɵtemplate(4, ListLeadComponent_tr_4_Template, 9, 0, \"tr\", 4);\n        i0.ɵɵpipe(5, \"paginate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"tbody\", 5);\n        i0.ɵɵtemplate(7, ListLeadComponent_tr_7_Template, 9, 4, \"tr\", 6);\n        i0.ɵɵpipe(8, \"paginate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, ListLeadComponent_div_9_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(5, 3, ctx.items, i0.ɵɵpureFunction1(9, _c0, ctx.page)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(8, 6, ctx.items, i0.ɵɵpureFunction1(11, _c0, ctx.page)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.items.length > 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.PaginationControlsComponent, i4.PaginatePipe],\n    styles: [\"@media (min-width: 640px) {\\n  table[_ngcontent-%COMP%] {\\n    display: inline-table !important;\\n  }\\n  thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:not(:first-child) {\\n    display: none;\\n  }\\n}\\ntd[_ngcontent-%COMP%]:not(:last-child) {\\n  border-bottom: 0;\\n}\\n\\nth[_ngcontent-%COMP%]:not(:last-child) {\\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlldy9QYWdlcy9saXN0LWxlYWQvbGlzdC1sZWFkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0U7SUFDRSxnQ0FBQTtFQUNGO0VBRUE7SUFDRSxhQUFBO0VBQUY7QUFDRjtBQUdBO0VBQ0UsZ0JBQUE7QUFERjs7QUFJQTtFQUNFLDJDQUFBO0FBREYiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgdGFibGUge1xuICAgIGRpc3BsYXk6IGlubGluZS10YWJsZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgdGhlYWQgdHI6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxudGQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gIGJvcmRlci1ib3R0b206IDA7XG59XG5cbnRoOm5vdCg6bGFzdC1jaGlsZCkge1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgwLCAwLCAwLCAuMSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,mCAAmC;AAEvD,SAASC,mBAAmB,QAAQ,qCAAqC;;;;;;;;ICEjEC,6BAEC;IAC2BA,uBAAO;IAAAA,iBAAK;IACtCA,6BAA0B;IAAAA,oBAAI;IAAAA,iBAAK;IACnCA,6BAA0B;IAAAA,qBAAK;IAAAA,iBAAK;IACpCA,8BAAwC;IAAAA,uBAAO;IAAAA,iBAAK;;;;;;IAItDA,8BAGC;IAEGA,YACF;IAAAA,iBAAK;IACLA,8BAAoE;IAClEA,YACF;IAAAA,iBAAK;IACLA,8BAAoE;IAClEA,YACF;IAAAA,iBAAK;IACLA,8BAGC;IADCA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAE1BA,uBACF;IAAAA,iBAAK;;;;IAbHA,eACF;IADEA,gDACF;IAEEA,eACF;IADEA,2EACF;IAEEA,eACF;IADEA,+EACF;;;;;;IAUNA,+BAA+D;IACxCA;MAAAA;MAAA;MAAA;IAAA,EAA4B;IAACA,iBAAsB;;;;;;;;;ADzB9E,OAAM,MAAOC,iBAAiB;EAK5BC,YACUC,cAA8B,EAC/BC,MAAiB;IADhB,mBAAc,GAAdD,cAAc;IACf,WAAM,GAANC,MAAM;IANf,SAAI,GAAW,CAAC,CAAC,CAAC;IAClB,UAAK,GAAW,EAAE;IAClB,SAAI,GAAW,CAAC;EAKb;EACHC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,SAAS,CAACT,GAAG,EAAE,CAACU,cAAc,CAAC,CAACC,SAAS,CAAEC,IAAQ,IAAI;MACzEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;MACnB,IAAI,CAACG,KAAK,GAAGH,IAAI;IAGnB,CAAC,CAAC;EACJ;EAEAI,UAAU,CAACC,MAAc;IACvB,MAAMC,SAAS,GAAG,IAAI,CAACZ,MAAM,CAACa,IAAI,CAAClB,mBAAmB,EAAC;MAACW,IAAI,EAAE;QAACQ,EAAE,EAAGH;MAAM;IAAC,CAAC,CAAC;EAE/E;EAAC;qBAzBUd,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAAkB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCd9BvB,8BAA8C;QAMtCA,gEAOK;;QACPA,iBAAQ;QACRA,gCAAmC;QACjCA,gEAmBK;;QACPA,iBAAQ;QAEVA,kEAEM;QACRA,iBAAM;;;QAnCqBA,eAA6D;QAA7DA,+FAA6D;QAY/DA,eAA6D;QAA7DA,gGAA6D;QAoB7CA,eAAsB;QAAtBA,2CAAsB","names":["API","UpdateLeadComponent","i0","ListLeadComponent","constructor","genericService","dialog","ngOnInit","loadData","getMethod","getListOfLeads","subscribe","data","console","log","items","updateLead","leadId","dialogRef","open","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/mohamedelsayed/Personal/angular/angular-interview-task/src/app/view/Pages/list-lead/list-lead.component.ts","/home/mohamedelsayed/Personal/angular/angular-interview-task/src/app/view/Pages/list-lead/list-lead.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { GenericService } from '../../../core/services/generic.service';\nimport { API } from '../../../core/services/ip.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UpdateLeadComponent } from './update-lead/update-lead.component';\nimport { Lead } from 'src/app/core/Interfaces/lead';\nexport interface DialogData {\n  id: string;\n}\n@Component({\n  selector: 'app-list-lead',\n  templateUrl: './list-lead.component.html',\n  styleUrls: ['./list-lead.component.scss']\n})\nexport class ListLeadComponent {\n  show: number = 5; // Use this value to control how many items will be appear per Selecton Criteria and Operations\n  items: Lead[] = [];\n  page: number = 1;\n\n  constructor(\n    private genericService: GenericService,\n    public dialog: MatDialog\n  ) {}\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.genericService.getMethod(API().getListOfLeads).subscribe((data:any) => {\n      console.log(data); // JSON data will be logged here\n      this.items = data;\n\n\n    });\n  }\n\n  updateLead(leadId: string) {\n    const dialogRef = this.dialog.open(UpdateLeadComponent,{data: {id : leadId}});\n\n  }\n}\n","<div class=\"flex items-center justify-center\">\n  <div class=\"container\">\n    <table\n      class=\"w-full flex flex-row flex-no-wrap sm:bg-white rounded-lg overflow-hidden sm:shadow-lg my-5\"\n    >\n      <thead class=\"text-white\">\n        <tr *ngFor=\"let item of items | paginate : { itemsPerPage: 10, currentPage: page }\"\n         class=\"bg-gray-400 flex flex-col flex-no wrap sm:table-row rounded-l-lg sm:rounded-none mb-2 sm:mb-0\"\n        >\n          <th class=\"p-3 text-left\">Lead Id</th>\n          <th class=\"p-3 text-left\">Name</th>\n          <th class=\"p-3 text-left\">Email</th>\n          <th class=\"p-3 text-left\" width=\"110px\">Actions</th>\n        </tr>\n      </thead>\n      <tbody class=\"flex-1 sm:flex-none\">\n        <tr\n          class=\"flex flex-col flex-no wrap sm:table-row mb-2 sm:mb-0\"\n          *ngFor=\"let item of items | paginate : { itemsPerPage: 10, currentPage: page }\"\n        >\n          <td class=\"border-grey-light border hover:bg-gray-100 p-3 \">\n            {{ item.lead_id }}\n          </td>\n          <td class=\"border-grey-light border hover:bg-gray-100 p-3 truncate\">\n            {{ item.first_name }} {{ item.last_name }}\n          </td>\n          <td class=\"border-grey-light border hover:bg-gray-100 p-3 truncate\">\n            {{ item.email? item.email : 'Not Provided' }}\n          </td>\n          <td\n            class=\"border-grey-light border hover:bg-gray-100 p-3 text-blue-400 hover:text-blue-600 hover:font-medium cursor-pointer\"\n            (click)=\"updateLead(item)\"\n          >\n            Check\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"flex justify-center pt-2\" *ngIf=\"items.length > 0\">\n      <pagination-controls (pageChange)=\"page = $event\"></pagination-controls>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}